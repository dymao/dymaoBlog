<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dymao.dao.mapper.BlogCategoryMapper">
  <resultMap id="BaseResultMap" type="com.dymao.model.BlogCategory">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="level" jdbcType="SMALLINT" property="level" />
    <result column="parentId" jdbcType="VARCHAR" property="parentId" />
  </resultMap>

  <resultMap id="queryForListMap" type="com.dymao.vo.CategoryInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="level" jdbcType="SMALLINT" property="level" />
    <result column="parentId" jdbcType="VARCHAR" property="parentId" />
    <result column="parentName" jdbcType="VARCHAR" property="parentName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, level, parentId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blogcategory
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from blogcategory
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteByCategoryIds" parameterType="java.util.List">
    delete from blogcategory where id in
    <foreach collection="list" index="index" item="id" open="(" close=")" separator=",">
      #{id,jdbcType=VARCHAR}
    </foreach>
  </delete>

  <insert id="insert" parameterType="com.dymao.model.BlogCategory">
    insert into blogcategory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="parentId != null">
        parentId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=SMALLINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.dymao.model.BlogCategory">
    update blogcategory
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=SMALLINT},
      </if>
      <if test="parentId != null">
        parentId = #{parentId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="findCategoryList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
       <include refid="Base_Column_List" />
     from blogcategory
    <if test="level != null">
       where level = #{level,jdbcType=SMALLINT}
    </if>
  </select>

  <select id="queryCategoryInfoList" parameterType="java.lang.Integer" resultMap="queryForListMap">
    select a.id, a.name, a.level, a.parentId,b.name as parentName
      from blogcategory a left join blogcategory b on a.parentId = b.id
    <if test="level != null">
      where a.level = #{level,jdbcType=SMALLINT}
    </if>
  </select>

  <select id="queryCategoryInfoListCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(1)
      from blogcategory a left join blogcategory b on a.parentId = b.id
    <if test="level != null">
      where a.level = #{level,jdbcType=SMALLINT}
    </if>
  </select>
</mapper>